var cookieDomain='.fifa.com';var baseUrl='http://www.fifa.com';var siteLang='en';var idSplitLen=3;var numWordsComment=100;var commentsPerPage=10;var titlePrefixReverse=true;function getMatchData(matchId) {try {return liveHeader.data.matches[liveHeader.matches[matchId]];} catch (e) {return undefined;}}var liveHeader={data:{} // contiene i dati caricati,matches:{} // accesso all'indice match per id:il match 123 è liveHeader.data.matches[liveHeader.matches["123"]],matchArray:{} // array di match per confederation (0=="all"),matchBoxWidth:0 // larghezza del box di un singolo match (calcolata),feedUrl:"",pollingTime:5000,pollingTimeout:undefined,resString:"rs",fullResString:"r_en",currentZone:0,currentMatch:0,intcmp:"",linkToMatchcast:true,linkNoMC:"",lhMatches:{},init:function(feedUrl,pollingTime,intcmp,linkToMatchcast,linkNoMC) {liveHeader.feedUrl=feedUrl;liveHeader.pollingTime=pollingTime;liveHeader.resString=(siteLang=="ar" ? "rs_ar":"rs");liveHeader.fullResString="r_" + siteLang;liveHeader.lhMatches=$j("#liveHeader .lh_matches");liveHeader.intcmp=intcmp ? "intcmp=" + intcmp:"";liveHeader.linkToMatchcast=typeof linkToMatchcast=="undefined" ? true:!!linkToMatchcast;liveHeader.linkNoMC=linkNoMC;$j.getJSON(liveHeader.feedUrl + "?ign=" + getIgn(),function(data) {liveHeader.data=data;liveHeader.createMarkup(data);liveHeader.autoScroll(false,true,true);if(liveHeader.pollingTime>0) {liveHeader.pollingTimeout=setTimeout(liveHeader.update,liveHeader.pollingTime);}});},createMarkup:function(data) {liveHeader.matches={};liveHeader.matchArray={"0":[],"23913":[],"25998":[],"23914":[],"27275":[],"23916":[],"23915":[]};var i,match,buf="",dt,dd,dts;for (i=0;i<data.matches.length;i++) {match=data.matches[i];liveHeader.matches[match.id]=i;liveHeader.matchArray["0"].push(match.id);liveHeader.matchArray[match.conf].push(match.id);if(match.dt.indexOf(",")>0) {dd=tzc.getMarkup(match.dt,false,true);dt=tzc.getMarkup(match.dt,true,false);} else {dd="";dt="";}var matchLink;if(liveHeader.linkToMatchcast) {matchLink=baseUrl + "/worldcup/preliminaries/matchcast/index.html?matchid=" + match.id+ (liveHeader.intcmp ? "&" + liveHeader.intcmp:"");} else {var confederation;matchLink=baseUrl + "/worldcup/preliminaries/" + confFolder[match.conf] + "/matches/round=" + match.rn + "/match=" + match.id + "/index.html"+ (liveHeader.intcmp ? "?" + liveHeader.intcmp:"");}buf += "<li id='lhMatch_" + match.id + "' class='lhmatch conf_" + match.conf + " st_" + match.st + "' onclick='liveHeader.lhMatchClick(" + match.id + ")'>"+ "<a href='" + matchLink + "'>"+ "<div class='lhmatch_cont'>"+ "<div id='lhMatchTop_" + match.id + "' class='lh_match_top cf'>";if(match.st==0) {buf += "<span id='lhStat_" + match.id + "'>" + vocPmc.translate(match.sts) + "</span></div>";} else if(match.st==8) {buf += "<span id='lhStat_" + match.id + "'>" + vocPmc.translate(match.sts) + "</span></div>";} else if(match.hasOwnProperty("min")&&match.min.length>1) {buf += "<span id='lhMin_" + match.id + "'>" + vocPmc.translate("live") + "</span></div>";} else if(match.sts.length>1) {buf += "<span id='lhStat_" + match.id + "'>" + vocPmc.translate(match.sts) + "</span></div>";} else {buf += "<span id='lhDate_" + match.id + "'>" + dd + "</span></div>";}buf += "<div title='" + teamName[match.hId] + "' class='fll'>"+ "<span class='flagsp flagsp_" + teamCode[match.hId].toLowerCase() + "'></span>"+ "<span>" + teamCode[match.hId].toUpperCase() + "</span></div>"+ "<div title='" + teamName[match.aId] + "' class='flr'>"+ "<span class='flagsp flagsp_" + teamCode[match.aId].toLowerCase() + "'></span>"+ "<span>" + teamCode[match.aId].toUpperCase() + "</span></div>"+ "<div id='lhRes_" + match.id + "' class='lh_result'>";if(match.st=="1") {buf += "-</div>"+ "<div class='lh_match_bot cf'>"+ "<span id='lhTime_" + match.id + "'>" + dt + "</span>"+ "</div>";} else if(match.st=="3") {buf += "-</div>"} else {buf += match[liveHeader.resString] + "</div>";}buf += "</div></a></li>";}liveHeader.lhMatches.html(buf);liveHeader.matchBoxWidth=$j("#lhMatch_" + match.id).outerWidth();liveHeader.lhMatches.css({ width:(liveHeader.matchBoxWidth * liveHeader.matchArray[0].length) });tzc.refreshAfterAjax(liveHeader.lhMatches);},update:function() {$j.getJSON(liveHeader.feedUrl + "?ign=" + getIgn(),function(data) {try {if(data.timestamp>=liveHeader.data.timestamp) {if(data.chkstr!=liveHeader.data.chkstr) {liveHeader.data=data;liveHeader.createMarkup(data);liveHeader.changeConfed(liveHeader.currentZone);liveStatistics.changeConfed(liveHeader.currentZone);liveHeader.autoScroll(false,true,true);} else {liveHeader.data=data;var matchElement;var re=/st_[0-9]+/g;for (i=0;i<data.matches.length;i++) {match=data.matches[i];matchElement=$j("#lhMatch_" + match.id);matchElement.attr("class",matchElement.attr("class").replace(re,"st_" + match.st));$j("#lhRes_" + match.id).html(match.st=="0" ? match[liveHeader.resString]:"-");if(match.dt.indexOf(",")>0) {dd=tzc.getMarkup(match.dt,false,true);dt=tzc.getMarkup(match.dt,true,false);} else {dd="";dt="";}if(match.st==0) {$j("#lhMatchTop_" + match.id).html("<span id='lhStat_" + match.id + "'>" + vocPmc.translate(match.sts) + "</span>");} else if(match.hasOwnProperty("min")&&match.min.length>1) {$j("#lhMatchTop_" + match.id).html("<span id='lhMin_" + match.id + "'>" + vocPmc.translate("live") + "</span>");} else if(match.sts.length>1) {$j("#lhMatchTop_" + match.id).html("<span id='lhStat_" + match.id + "'>" + vocPmc.translate(match.sts) + "</span>");} else {$j("#lhMatchTop_" + match.id).html("<span id='lhDate_" + match.id + "'>" + dd + "</span>");}}tzc.refreshAfterAjax(liveHeader.lhMatches);}}} catch (e) {liveHeader.pollingTimeout=setTimeout(liveHeader.update,liveHeader.pollingTime);return;}if(liveHeader.pollingTime>0) {liveHeader.pollingTimeout=setTimeout(liveHeader.update,liveHeader.pollingTime);}});},lhMatchClick:function(matchId) { // click sul match nella live header},scrollBy:9 // TODO:parametrizzare?,scrolling:false,scrollingTimeout:undefined,scrollLock:false,lockScroll:function() {$j("#lockScroll").hide();$j("#unlockScroll").show();liveHeader.scrollLock=true;liveHeader.resetAutoScrollTimeout();},unlockScroll:function() {$j("#lockScroll").show();$j("#unlockScroll").hide();liveHeader.scrollLock=false;liveHeader.resetAutoScrollTimeout();},resetAutoScrollTimeout:function() {if(liveHeader.scrollingTimeout) clearTimeout(liveHeader.scrollingTimeout);if(liveHeader.scrollLock==false) {liveHeader.scrollingTimeout=setTimeout(liveHeader.periodicAutoScroll,30000);}},periodicAutoScroll:function() {liveHeader.autoScroll(true);},getDefaultMatchId:function() {var matchArray=liveHeader.matchArray[liveHeader.currentZone];var defaultSelectIndex,defaultScrollIndex;var lastResult=-1;var firstLiveOrLineup=-1,lastLiveOrLineup=-1;var i;for (i=0;i<matchArray.length;i++) {var match=getMatchData(matchArray[i]);if(match.st==3||(match.st==1&&match.sts=="lineup")) {firstLiveOrLineup=firstLiveOrLineup<0 ? i:firstLiveOrLineup;lastLiveOrLineup=i;} else if(match.st==0) {lastResult=i;}}if(firstLiveOrLineup>=0) {defaultSelectIndex=firstLiveOrLineup;} else if(lastResult>=0) {defaultSelectIndex=lastResult;} else {defaultSelectIndex=0;}if(matchArray.length<=9) {defaultScrollIndex=0;} else {if(firstLiveOrLineup>=0) {var numberOfLineOrLineup=lastLiveOrLineup - firstLiveOrLineup + 1;if(numberOfLineOrLineup>=9) {defaultScrollIndex=firstLiveOrLineup;} else if(numberOfLineOrLineup==8) {defaultScrollIndex=Math.max((firstLiveOrLineup - 1),0);} else {defaultScrollIndex=Math.max((firstLiveOrLineup - 2),0);}} else {if(lastResult>=0) {defaultScrollIndex=Math.max(lastResult - 8,0);} else {defaultScrollIndex=0;}}defaultScrollIndex=Math.min(defaultScrollIndex,matchArray.length - 9);}return {select:matchArray[defaultSelectIndex],scroll:matchArray[defaultScrollIndex]};},autoScroll:function(animated,selectMatch,fromQuerystring) {var targetId,scrollTarget;if(fromQuerystring) {var qp=window.location.toString().toQueryParams();if(qp.hasOwnProperty("matchid")) {scrollTarget=$j("#lhMatch_" + qp.matchid);if(scrollTarget.size()>0) {targetId={ select:qp.matchid,scroll:qp.matchid };}}}if(!targetId) {targetId=liveHeader.getDefaultMatchId();scrollTarget=$j("#lhMatch_" + targetId.scroll);}var offs=-scrollTarget.position().left;if(siteLang=="ar") offs += $j(".lhcontainer").width() - scrollTarget.width();// TODO:ottimizzare (la quantità aggiunta è sempre la stessa)if(animated) {liveHeader.scrolling=true;liveHeader.lhMatches.animate({ left:offs },1000,function() { liveHeader.scrolling=false;});} else {liveHeader.lhMatches.css({ left:offs });}liveHeader.resetAutoScrollTimeout();},prev:function(scrollBy) {scrollBy=scrollBy||liveHeader.scrollBy;if(!liveHeader.scrolling&&(liveHeader.lhMatches.outerWidth()>$j("#liveHeader .lhcontainer").outerWidth())) {try {var offs;if(siteLang=="ar") {offs=Math.max(-(liveHeader.lhMatches.outerWidth() - $j("#liveHeader .lhcontainer").outerWidth()),liveHeader.lhMatches.position().left - liveHeader.matchBoxWidth * scrollBy);} else {offs=Math.min(0,liveHeader.lhMatches.position().left + liveHeader.matchBoxWidth * scrollBy);}liveHeader.scrolling=true;liveHeader.lhMatches.animate({ left:offs },1000,function() { liveHeader.scrolling=false;});} catch (e) {liveHeader.scrolling=false;}}liveHeader.resetAutoScrollTimeout();},next:function(scrollBy) {scrollBy=scrollBy||liveHeader.scrollBy;if(!liveHeader.scrolling&&(liveHeader.lhMatches.outerWidth()>$j("#liveHeader .lhcontainer").outerWidth())) {try {var offs;if(siteLang=="ar") {offs=Math.min(0,liveHeader.lhMatches.position().left + liveHeader.matchBoxWidth * scrollBy);} else {offs=Math.max(-(liveHeader.lhMatches.outerWidth() - $j("#liveHeader .lhcontainer").outerWidth()),liveHeader.lhMatches.position().left - liveHeader.matchBoxWidth * scrollBy);}liveHeader.scrolling=true;liveHeader.lhMatches.animate({ left:offs },1000,function() { liveHeader.scrolling=false;});} catch (e) {liveHeader.scrolling=false;}}liveHeader.resetAutoScrollTimeout();}}